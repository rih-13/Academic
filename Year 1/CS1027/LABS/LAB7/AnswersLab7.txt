Answers for Lab 7
-----------------------------------------------
Ria Haque - 251164501

EXERCISE 1

1. Which methods in the LinkedQueue class are taking in a parameter of the generic type T?
enqueue


2. Which methods in the LinkedQueue class have a return type of the generic type T?
dequeue, first



3. Suppose you didn't have an instance variable storing the current number of elements in the queue. How could you determine the number of elements for the size() method if such an instance variable was not available?
Create an int size, and start at the front of the queue. While you have not reached null (indicating the end of the list) traverse through the linked list by moving onto the next node, and each time increment the variable int. 



EXERCISE 2

4. Consider the possibility of using an Array Queue or a Circular Array Queue instead of the Linked Queue being used in this simulation. Would the simulation's results be impacted by switching to a different Queue implementation?
An array queue/circular array queue would need to have an expand capacity function if the number of position movements given is larger than the size of the initial array created. If the program was written to have a default array size of 10, and 11 position movements were given by the player the game would crash. A circular array can also run out of space in the same way if the entire circular array is looped through. 


5. Which of these classes/methods would you have to modify if you were going to use one of the other queue implementations?
Enqueue, dequeue
Size() and IsEmpty() do not have to be changed, front would have to be changed from the getElement() method that it uses that is suitable for a linked list. It would instead have to index the array. However, the overall structure of the method would be the same. 



